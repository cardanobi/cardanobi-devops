{
  "openapi": "3.0.1",
  "info": {
    "title": "CardanoBI API",
    "description": "A fully open-source Business Intelligence API for Cardano.",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Example Contact",
      "url": "https://example.com/contact"
    },
    "license": {
      "name": "Example License",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/core/epochs/latest": {
      "get": {
        "tags": [
          "Core",
          "Epochs"
        ],
        "summary": "Latest epoch.",
        "description": "Returns info about the latest epoch.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epoch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs": {
      "get": {
        "tags": [
          "Core",
          "Epochs"
        ],
        "summary": "All epochs.",
        "description": "Returns all epoch entities.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Epoch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/{epoch_no}": {
      "get": {
        "tags": [
          "Core",
          "Epochs"
        ],
        "summary": "One epoch by number.",
        "description": "Returns one specific epoch given its number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epoch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/epochs": {
      "get": {
        "tags": [
          "Core",
          "Epochs"
        ],
        "summary": "All epochs.",
        "description": "Returns all epoch entities.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Epoch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/epochs/{epoch_no}": {
      "get": {
        "tags": [
          "Core",
          "Epochs"
        ],
        "summary": "One epoch by number.",
        "description": "Returns one specific epoch given its number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Epoch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/params/latest": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Parameters"
        ],
        "summary": "Latest epoch params.",
        "description": "Returns the parameters for the latest epoch.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpochParam"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/params": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Parameters"
        ],
        "summary": "All epoch params.",
        "description": "Returns the parameters for all epoch.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochParam"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/{epoch_no}/params": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Parameters"
        ],
        "summary": "One epoch params by number.",
        "description": "Returns the parameters of one specific epoch given its number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpochParam"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/epochsparams": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Parameters"
        ],
        "summary": "All epoch params.",
        "description": "Returns the parameters for all epoch.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochParam"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/epochsparams/{epoch_no}": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Parameters"
        ],
        "summary": "One epoch params by number.",
        "description": "Returns the parameters of one specific epoch given its number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpochParam"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/stakes/pools/{pool_hash}": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Stakes"
        ],
        "summary": "One pool stake distributions.",
        "description": "Returns the stake distribution for one pool across all epochs given its Bech32 pool hash.",
        "parameters": [
          {
            "name": "pool_hash",
            "in": "path",
            "description": "Bech32 pool hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochStakeView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/{epoch_no}/stakes/pools/{pool_hash}": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Stakes"
        ],
        "summary": "One epoch and one pool stake distributions.",
        "description": "Returns the stake distribution for one epoch given its number, and for one pool given its Bech32 pool hash.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pool_hash",
            "in": "path",
            "description": "Bech32 pool hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochStakeView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/epochs/latest/stakes/pools/{pool_hash}": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Stakes"
        ],
        "summary": "Latest epoch and one pool stake distributions.",
        "description": "Returns the stake distribution for the latest epoch, and for one pool given its Bech32 pool hash.",
        "parameters": [
          {
            "name": "pool_hash",
            "in": "path",
            "description": "Bech32 pool hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochStakeView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/epochsstakes": {
      "get": {
        "tags": [
          "Core",
          "Epochs",
          "Stakes"
        ],
        "summary": "One epoch and one pool stake distributions.",
        "description": "Returns the stake distribution for one epoch given its number, and for one pool given its Bech32 pool hash.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "query",
            "description": "Epoch number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pool_hash",
            "in": "query",
            "description": "Bech32 pool hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpochStakeView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/$metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/core/odata/$metadata",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/bi/odata/$metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/bi/odata/$metadata",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/odata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/core/odata/",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              }
            }
          }
        }
      }
    },
    "/api/bi/odata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "api/bi/odata/",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              }
            }
          }
        }
      }
    },
    "/api/core/polls": {
      "get": {
        "tags": [
          "Core",
          "Polls"
        ],
        "summary": "All polls.",
        "description": "Returns the list of all polls defined on chain.",
        "parameters": [
          {
            "name": "page_no",
            "in": "query",
            "description": "Page number to retrieve - defaults to 1",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results per page - defaults to 20 - max 100",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Prescribes in which order results are returned - \"desc\" descending (default) from newest to oldest - \"asc\" ascending from oldest to newest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollOverviewDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/polls/{poll_hash}": {
      "get": {
        "tags": [
          "Core",
          "Polls"
        ],
        "summary": "One poll full details by hash.",
        "description": "Returns on-chain information about a poll given the hash of its question.",
        "parameters": [
          {
            "name": "poll_hash",
            "in": "path",
            "description": "The HEX encoding of the poll's hash (e.g. the hash of the poll's question).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PollDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/hashes": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Hashes"
        ],
        "summary": "All pool key hash.",
        "description": "Returns every unique pool key hash.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolHash"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolshashes": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Hashes"
        ],
        "summary": "All pool key hash.",
        "description": "Returns every unique pool key hash.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolHash"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/metadata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Metadata"
        ],
        "summary": "All pool metadata.",
        "description": "Returns all on-chain references to off-chain pool metadata.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{pool_id}/metadata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Metadata"
        ],
        "summary": "One pool metadata by pool id.",
        "description": "Returns the on-chain references to off-chain pool metadata for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/metadata/hashes/{meta_hash}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Metadata"
        ],
        "summary": "One pool metadata by pool metadata hash.",
        "description": "Returns the on-chain references to off-chain pool metadata for one pool given its metadata hash.",
        "parameters": [
          {
            "name": "meta_hash",
            "in": "path",
            "description": "Pool metadata hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsmetadata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Metadata"
        ],
        "summary": "All pool metadata.",
        "description": "Returns all on-chain references to off-chain pool metadata.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsmetadata/{pool_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Metadata"
        ],
        "summary": "One pool metadata by pool id.",
        "description": "Returns the on-chain references to off-chain pool metadata for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/offlinedata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "All pool offline data.",
        "description": "Returns all pool offline (ie not on chain) data.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{pool_id}/offlinedata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "One pool offline data by pool id.",
        "description": "Returns the offline (ie not on chain) data for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{ticker}/offlinedata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "One pool offline data by pool ticker.",
        "description": "Returns the offline (ie not on chain) data for one pool given its ticker.",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Pool ticker",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/metadata/{meta_hash}/offlinedata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "One pool offline data by pool metadata hash.",
        "description": "Returns the offline (ie not on chain) data for one pool given its metadata hash.",
        "parameters": [
          {
            "name": "meta_hash",
            "in": "path",
            "description": "Pool metadata hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsofflinedata": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "All pool offline data.",
        "description": "Returns all pool offline (ie not on chain) data.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsofflinedata/{pool_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "OfflineData"
        ],
        "summary": "One pool offline data by pool id.",
        "description": "Returns the offline (ie not on chain) data for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/offlinefetcherrors": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "FetchErrors"
        ],
        "summary": "All pool offline fetch errors.",
        "description": "Returns all pool offline fetch errors.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineFetchError"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{pool_id}/offlinefetcherrors": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "FetchErrors"
        ],
        "summary": "One pool offline fetch errors by pool id.",
        "description": "Returns the offline fetch errors for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineFetchError"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsofflinefetcherrors": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "FetchErrors"
        ],
        "summary": "All pool offline fetch errors.",
        "description": "Returns all pool offline fetch errors.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineFetchError"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsofflinefetcherrors/{pool_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "FetchErrors"
        ],
        "summary": "One pool offline fetch errors by pool id.",
        "description": "Returns the offline fetch errors for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolOfflineFetchError"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/relays/updates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Relays"
        ],
        "summary": "All relays.",
        "description": "Returns all pool relays.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolRelay"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/relays/updates/{update_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Relays"
        ],
        "summary": "One pool relays by pool update unique identifier.",
        "description": "Returns the relays for one pool given a pool update unique identifier.",
        "parameters": [
          {
            "name": "update_id",
            "in": "path",
            "description": "The pool update unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolRelay"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{vrf_key_hash}/relays/updates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Relays"
        ],
        "summary": "One pool relays by VRF key hash.",
        "description": "Returns the relays for one pool given its VRF key hash.",
        "parameters": [
          {
            "name": "vrf_key_hash",
            "in": "path",
            "description": "The pool VRF key in HEX format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolRelay"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsrelays": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Relays"
        ],
        "summary": "All relays.",
        "description": "Returns all pool relays.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolRelay"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsrelays/{update_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Relays"
        ],
        "summary": "One pool relays by pool update unique identifier.",
        "description": "Returns the relays for one pool given a pool update unique identifier.",
        "parameters": [
          {
            "name": "update_id",
            "in": "path",
            "description": "The pool update unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolRelay"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/bi/pools/stats/epochs/{epoch_no}": {
      "get": {
        "tags": [
          "BI",
          "Pools",
          "Stats"
        ],
        "summary": "All pools statistics per epoch.",
        "description": "Pools activity statistics per epoch number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "path",
            "description": "Epoch number.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolStat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/bi/pools/{pool_hash}/stats": {
      "get": {
        "tags": [
          "BI",
          "Pools",
          "Stats"
        ],
        "summary": "One pool statistics per epoch.",
        "description": "Pool activity statistics for a given pool per epoch number.",
        "parameters": [
          {
            "name": "pool_hash",
            "in": "path",
            "description": "The Bech32 encoding of a given pool hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolStat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/bi/odata/poolsstats": {
      "get": {
        "tags": [
          "BI",
          "Pools",
          "Stats"
        ],
        "summary": "All pools statistics per epoch.",
        "description": "Pools activity statistics per epoch number.",
        "parameters": [
          {
            "name": "epoch_no",
            "in": "query",
            "description": "Epoch number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pool_hash",
            "in": "query",
            "description": "The Bech32 encoding of a given pool hash",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolStat"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/updates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Updates"
        ],
        "summary": "All on-chain pool updates.",
        "description": "Returns all on-chain pool updates.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{pool_id}/updates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Updates"
        ],
        "summary": "One pool on-chain updates.",
        "description": "Returns the on-chain updates for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/pools/{vrf_key_hash}/updates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Updates"
        ],
        "summary": "One pool on-chain updates.",
        "description": "Returns the on-chain updates for one pool given its VRF key hash.",
        "parameters": [
          {
            "name": "vrf_key_hash",
            "in": "path",
            "description": "The pool VRF key in HEX format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsupdates": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Updates"
        ],
        "summary": "All on-chain pool updates.",
        "description": "Returns all on-chain pool updates.",
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/odata/poolsupdates/{pool_id}": {
      "get": {
        "tags": [
          "Core",
          "Pools",
          "Updates"
        ],
        "summary": "One pool on-chain updates.",
        "description": "Returns the on-chain updates for one pool given its unique identifier.",
        "parameters": [
          {
            "name": "pool_id",
            "in": "path",
            "description": "Pool unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PoolUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}": {
      "get": {
        "tags": [
          "Core",
          "Transactions"
        ],
        "summary": "Details of a given transaction.",
        "description": "Returns details of a transaction given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/utxos": {
      "get": {
        "tags": [
          "Core",
          "Transactions"
        ],
        "summary": "Inputs and Unspent Outputs of a given transaction.",
        "description": "Returns all Inputs and Unspent Outputs (UTXOs) of a transaction given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionUtxoDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/stake_address_registrations": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Certificates"
        ],
        "summary": "Stake address certificate transactions.",
        "description": "Returns details of a transaction used to register a stake address given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionStakeAddressDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/stake_address_delegations": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Certificates"
        ],
        "summary": "Stake address delegation transactions.",
        "description": "Returns details of a transaction used to delegate a given stake address to a pool.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionStakeAddressDelegationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/withdrawals": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Withdrawals"
        ],
        "summary": "Reward account withdrawal transactions.",
        "description": "Returns details of a transaction used to withdraw rewards given its staked address.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionStakeAddressWithdrawalDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/treasury": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Pots"
        ],
        "summary": "Transactions for treasury payments to a stake address.",
        "description": "Returns details of a transaction used for payments between the treasury and a stake address.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionTreasuryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/reserves": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Pots"
        ],
        "summary": "Transactions for reserves payments to a stake address.",
        "description": "Returns details of a transaction used for payments between the reserves and a stake address.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionTreasuryDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/param_proposals": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Blockchain"
        ],
        "summary": "Transactions for block chain parameter change proposals.",
        "description": "Returns details of a transaction used for block chain parameter change proposals.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParamProposal"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/retiring_pools": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Certificates"
        ],
        "summary": "Pool retirement transactions.",
        "description": "Returns details of a transaction used to retire a stake pool.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionRetiringPoolDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/updating_pools": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Certificates"
        ],
        "summary": "On-chain pool update transactions.",
        "description": "Returns details of a transaction used to update a stake pool.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionUpdatingPoolDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/metadata": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Metadata"
        ],
        "summary": "Metadata attached to a transaction.",
        "description": "Returns the metadata attached to a transaction given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionMetadataDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/assetmints": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Assets"
        ],
        "summary": "Multi-asset mint events attached to a transaction.",
        "description": "Returns the details of a multi-asset mint event attached to a transaction given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MultiAssetTransactionMintDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    },
    "/api/core/transactions/{transaction_hash}/redeemers": {
      "get": {
        "tags": [
          "Core",
          "Transactions",
          "Contracts"
        ],
        "summary": "Redeemers attached to a transaction.",
        "description": "Returns redeemers information attached to a transaction given its hash.",
        "parameters": [
          {
            "name": "transaction_hash",
            "in": "path",
            "description": "The transaction hash.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: Successful request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RedeemerDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request was unacceptable, often due to missing a required parameter."
          },
          "401": {
            "description": "Unauthorized: No valid API key provided."
          },
          "402": {
            "description": "Quota Exceeded: This API key has reached its usage limit on request."
          },
          "403": {
            "description": "Access Denied: The request is missing a valid API key or token."
          },
          "404": {
            "description": "Not Found: The requested resource cannot be found."
          },
          "429": {
            "description": "Too Many Requests: This API key has reached its rate limit."
          }
        }
      }
    }
  }
}